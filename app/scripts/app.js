// Generated by CoffeeScript 1.7.1
'use strict';
var app;

app = angular.module('emmFrontendApp', ['ngCookies', 'ngResource', 'ngSanitize', 'ngRoute']);


/*
 * $routProvider: 用于配置route路由
 * $locationProvider: 用于配置angularJS中的deep link路径的存储格式。 包含hashPrefix和html5Mode属性
 * $$httpProvider: 用于进行$http的配置
 */

app.config(function($routeProvider, $locationProvider, $httpProvider) {
  $routeProvider.when('/', {
    templateUrl: 'partials/main',
    controller: 'MainCtrl',
    authenticate: true
  }).when('/login', {
    templateUrl: 'partials/login',
    controller: 'LoginCtrl'
  }).when('/signup', {
    templateUrl: 'partials/signup',
    controller: 'SignupCtrl'
  }).when('/settings', {
    templateUrl: 'partials/settings',
    controller: 'SettingsCtrl',
    authenticate: true
  }).when('/role', {
    templateUrl: 'partials/role',
    controller: 'SettingsCtrl',
    authenticate: true
  }).otherwise({
    redirectTo: '/'
  });
  $locationProvider.html5Mode(true);

  /*
   * 当server端返回401错误的时候重定向到/login登陆页面
   */
  return $httpProvider.interceptors.push([
    '$q', '$location', function($q, $location) {
      return {
        responseError: function(response) {
          if (response.status === 401) {
            $location.path('/login');
          }
          return $q.reject(response);
        }
      };
    }
  ]);
});

app.run(function($rootScope, $location, $http, Auth) {
  $rootScope.config = {
    user: {},
    company: {},
    menus: {}
  };
  $http({
    method: 'GET',
    url: '/api/config'
  }).success(function(data, status, headers, config) {
    return $rootScope.config = data;
  }).error(function(data, status, headers, config) {
    return alert('/api/config error');
  });

  /*
   * 监听route地址的变化，如果route地址需要权限验证，而又未登录，则跳转至login登陆页面
   */
  return $rootScope.$on('$routeChangeStart', function(event, next) {
    if (next.authenticate && !Auth.isLoggedIn()) {
      $location.path('/login');
    }
    return $rootScope.url = $location.url();
  });
});
